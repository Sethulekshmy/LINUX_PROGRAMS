#include <stdio.h>
#include <unistd.h>
#include <pthread.h>

void *fun(void *arg) //Thread1
{
  //changing the pthread cancellation STATE
  pthread_setcancelstate(PTHREAD_CANCEL_DISABLE,NULL);
  //changing the pthread cancellation type
  //pthread_setcanceltype(PTHREAD_CANCEL_ASYNCHRONOUS, NULL);

  for(int i=0;i < 10;sleep(1),i++)

    printf("Thread is running %d times\n",i+1);
    //while(1);
    //return NULL;

}
int main()
{
    pthread_t tid;
    //create the thread for fun1
    pthread_create(&tid,NULL,fun,NULL);

    sleep(3);
    printf("sending the cancellation frequest\n");
    pthread_cancel(tid);

    //wait for the thread
    pthread_join(tid,NULL);
    sleep(10);
    printf("Main thread terminating\n");

}
